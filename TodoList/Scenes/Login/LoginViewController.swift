//
//  LoginViewController.swift
//  TodoList
//
//  Created by Mac on 21.02.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit


/// протокол логики роутинга
protocol LoginDisplayLogic: AnyObject {
	/// отправиться на следующий экран
	/// - Parameter viewModel: модель экрана содержит bool - можно ли перемещаться
	func route(viewModel: Login.ViewModel)
}

/// протокол логики редакции текста на экране
protocol LoginEditingLogic: AnyObject {
	/// завершить редактирование текста
	/// - Parameter viewModel: модель экрана содержит bool - можно ли скрыть клавиатуру
	func endEditing(viewModel: Edit.ViewModel)
}

/// вьюконтроллер экрана логин
class LoginViewController: UIViewController {
	/// интерактор экрана логин
	var interactor: LoginBusinessLogic?
	/// роутер экрана логина
	var router: (NSObjectProtocol & LoginRoutingLogic)?
	/// текстфилд для ввода пользовательского логина
	@IBOutlet weak var loginTextField: UITextField!
	/// текстфилд для ввода пользовательского пароля
	@IBOutlet weak var passwordTextField: UITextField!

	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
		super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
		setup()
	}

	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		setup()
	}

	override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
		super.touchesBegan(touches, with: event)
		interactor?.tochesBegan()
	}

	private func setup() {
		let viewController = self
		let interactor = LoginInteractor()
		let presenter = LoginPresenter()
		let router = LoginRouter()
		viewController.interactor = interactor
		viewController.router = router
		interactor.presenter = presenter
		presenter.viewController = viewController
		router.viewController = viewController
	}
	
	/// событие нажатия на кнопку логин
	/// - Parameter sender: кнопка логина
	@IBAction func logInTapped(_ sender: UIButton) {
		let request = Login.Request(login: loginTextField.text!, password: passwordTextField.text!)
		interactor?.logInTapped(request: request)
	}

	private func showLoginAlert() {
		let ac = UIAlertController(title: "Can't login", message: "Wrong login or password", preferredStyle: .alert)
		let okAction = UIAlertAction(title: "Ok", style: .destructive)
		ac.addAction(okAction)
		present(ac, animated: true)
	}
}

extension LoginViewController: LoginDisplayLogic {
	func route(viewModel: Login.ViewModel) {
		if viewModel.canMoveNext {
			guard let controller = storyboard?
				.instantiateViewController(
					withIdentifier: "ToDoListViewController") as? ToDoListViewController else { return }
			router?.navigateToToDoList(source: self, destination: controller)
		} else {
			showLoginAlert()
		}
	}
}

extension LoginViewController: LoginEditingLogic {
	func endEditing(viewModel: Edit.ViewModel) {
		loginTextField.endEditing(viewModel.endEditing)
		passwordTextField.endEditing(viewModel.endEditing)
	}
}
